#!/bin/bash
#
# Copyright 2012 "Korora Project" <dev@kororaproject.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the temms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

#
# INTIALISE
#
OPT_VERBOSE=
OPT_USB=
OPT_ISO=1


OPT_RELEASE_VERSION=18
OPT_RELEASE_CODENAME="Flo"
OPT_RELEASE_BASEARCH="x86_64"

#
# PRIVATE FUNCTIONS
#

function _template_inflate {
  _DST_FILE=${1}
  _SRC_FILE=${2}

  if [ -r ${_SRC_FILE} ]
  then
    cp "${_SRC_FILE}" "${_DST_FILE}"
  fi

  # substitute variables
  sed -i "s@%%KP_KICKSTART_DIR%%@${CONFIG_DIR}/kickstart.d@g" ${_DST_FILE}
  sed -i "s@%%KP_REPOSITORY_DIR%%@${WORKING_DIR}/repository@g" ${_DST_FILE}
  sed -i "s@%%KP_BASEARCH%%@${OPT_RELEASE_BASEARCH}@g" ${_DST_FILE}
  sed -i "s@%%KP_VERSION%%@${OPT_RELEASE_VERSION}@g" ${_DST_FILE}


  # check for includes in our template
  grep "%include" ${_DST_FILE} | while read I F
  do
    _FI="/tmp/$(basename ${F}).${RANDOM}"

    # replace include with our inflated version
    sed -i "s@$F@${_FI}@" ${_DST_FILE}

    # ensure includes are inflated
    _template_inflate "${_FI}" "${F}"
  done
}

#
# FUNCTIONS
#

function usage {
  _EXIT_VAL=${1:-0}

  cat << EOF
Usage: $0 release [options] [release ... releaseN]

Options:
  -t   Set the release title
  -r   Set the release version
  -n   Set the release codename
  -v   Show verbose output
  -?   Show this usage
  -V   Show version

Long Options:
  --release-title     Same as -t
  --release-version   Same as -r
  --release-codename  Same as -n
  --verbose           Same as -v
  --help              Same as -?
  --version           Same as -V

EOF

  exit ${_EXIT_VAL};
}

#
# PARSE COMMAND LINE
#

function parse_args {
  CMD_LINE=$(getopt -n$0 -u --longoptions="list iso usb verbose version help" "l v V ?" $@)
  [ ${?} -ne 0 ] && usage 1

  set -- ${CMD_LINE}

  while [ $# -gt 0 ]
  do
    case "$1" in
      -v|--verbose)
        OPT_VERBOSE=1
        ;;
      -V|--version)
        version 0
        ;;
      --help)
        usage 0
        ;;
      --)
        shift
        break
        ;;
      -*)
        usage 1
        ;;
      *)
        break
    esac
    shift
  done

  # remaining arguments are releases
  RELEASES=
  if [ $# -eq 0 ]
  then
    echo "Building all releases ..."
  else
    while [ $# -gt 0 ]
    do
      RELEASES="${RELEASES} $1"
      shift
    done
  fi
}


#
# MAIN
#

function main {
  # must be root to run
  if [ "$(id -u)" -ne 0 ]
  then
    _error "You must be root to build a release ISO."
    exit 1
  fi

  _VERBOSE=

  if [ ! -z ${OPT_VERBOSE} ]
  then
    _VERBOSE="--version"
  fi

  # build all requested releases
  for R in $(list_kickstart_available "${RELEASES}")
  do

    #
    _info "Preparing to build: $R"
    _info "  - Codename:     ${OPT_RELEASE_CODENAME}"
    _info "  - Version:      ${OPT_RELEASE_VERSION}"
    _info "  - Architecture: ${OPT_RELEASE_BASEARCH}"

    _FILE="korora-${OPT_RELEASE_VERSION}-${R}-live"

    # create working directory
    _TEMPLATE="/tmp/${R}.ks.${RANDOM}"

    _info "Preparing release template: ${_TEMPLATE}"

    #
    _template_inflate "${_TEMPLATE}" "${CONFIG_DIR}/kickstart.d/${R}.ks"

    # create the CD
    livecd-creator ${_VEBOSE} --config="${_TEMPLATE}" --fslabel="${_FILE}" --title="Korora ${OPT_RELEASE_VERSION}" --product="Korora ${OPT_RELEASE_VERSION} (${OPT_RELEASE_CODENAME})" --cache="${WORKING_RELEASE_CACHE_DIR}" --tmpdir="${WORKING_RELEASE_TMP_DIR}" --logfile="${LOG_FILE}"

    # clean up our inflated template file
    #rm -f "${_TEMPLATE}"
  done
}

