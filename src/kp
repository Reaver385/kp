#!/bin/bash
#
# Copyright 2012 "Korora Project" <dev@kororaproject.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the temms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

VERSION="0.1.0"

#
# PRE-INIT
#
SUB_COMMAND=
CONFIG_FILE=


if [ $# -eq 0 ]
then
  SUB_COMMAND=help
else
  # assume first parameter to be the subcommand
  while [ $# -gt 0 ] && [ -z ${SUB_COMMAND} ]
  do
    case "$1" in
      init|--init)
        SUB_COMMAND=init
        ;;
      list|--list)
        SUB_COMMAND=list
        ;;
      help|--help)
        SUB_COMMAND=help
        ;;
      build|--build)
        SUB_COMMAND=build
        ;;
      sync|--sync)
        SUB_COMMAND=sync
        ;;
      checkout|--checkout)
        SUB_COMMAND=checkout
        ;;
      release|--release)
        SUB_COMMAND=relese
        ;;
      --config*)
        if [ ${#1} -eq 8 ]
        then
          CONFIG_FILE=$2
          shift
        else
          CONFIG_FILE="${1/--config=/}"
        fi
        ;;
      *)
        _error "Uknown command specified: $1"
        exit 1
        ;;
    esac
    shift
  done
fi

#
# DEFAULTS
#

[ -z ${CONFIG_DIR} ]  && CONFIG_DIR="/etc/kp"
[ -z ${LIB_DIR} ]     && LIB_DIR="/usr/share/lib/kp/lib"
[ -z ${WORKING_DIR} ] && WORKING_DIR="/var/lib/kp"
[ -z ${RELEASE_DIR} ] && RELEASE_DIR="/tmp"
[ -z ${LOG_DIR} ]     && LOG_DIR="/usr/share/lib/kp/log"
[ -z ${CONFIG_FILE} ] && CONFIG_FILE="${CONFIG_DIR}/kp.conf"

#
# INCLUDES
#

if [ ! -r "${CONFIG_FILE}" -a "${SUB_COMMAND}" != "init" ]
then
  echo "FATAL: No configuration file found."
  exit 1
else
  source "${CONFIG_FILE}"
fi

if [ ! -d "${LIB_DIR}" -a "${SUB_COMMAND}" != "init" ]
then
  echo "FATAL: Invalid LIB_DIR defined."
  exit 1
else
  source ${LIB_DIR}/kp_core
fi

if [ ! -d "${LOG_DIR}" -a "${SUB_COMMAND}" != "init" ]
then
  echo "FATAL: Invalid LOG_DIR defined."
  exit 1
fi

# build working subdirectories
WORKING_PACKAGES_DIR="${WORKING_DIR}/packages"
WORKING_REPOSITORY_DIR="${WORKING_DIR}/repository"
WORKING_KICKSTART_DIR="${WORKING_DIR}/kickstart"
WORKING_RELEASE_DIR="${WORKING_DIR}/release"
WORKING_RELEASE_CACHE_DIR="${WORKING_DIR}/release/cache"
WORKING_RELEASE_TMP_DIR="${WORKING_DIR}/release/tmp"

SCRIPT=$(basename $0)

if [ ! -d "${WORKING_DIR}" -a "${SUB_COMMAND}" != "init" ]
then
  _error "Working directory doesn't not exist. Have you run \"kp --init\"?"
  exit 1
fi



DEBUG=1

#
# INCLUDES
#


CALL_PATH=$(dirname $0)

source "${LIB_DIR}/kp_${SUB_COMMAND}" $@

NOW=$(date +'%s')
NOW_LITERAL=$(date '+%Y-%m-%d %H:%M:%S')

LOG_FILE="${LOG_DIR}/kp-${SUB_COMMAND}-${NOW}.log"
if [ "${SUB_COMMAND}" != "init" ]
then
  touch $LOG_FILE
  _log "Logging started: ${NOW_LITERAL}"
fi

#
# DEPENDANCY CHECKS
#

_MOCK_VERSION=$(mock --version 2>/dev/null)
if [ ${?} -ne 0 ]
then
  _error "Can't find mock. Is it installed?"
  exit 1
fi

_MOCK_GROUPS=$(getent group mock | grep $(id -ng))
if [ ${?} -ne 0 ]
then
  _error "Current user is not part of the mock group."
  exit 1
fi


_SPECTOOL_VERSIOIN=$(spectool --version 2>/dev/null)
if [ ${?} -ne 0 ]
then
  _error "Can't find spectool. Is it installed?"
#  exit 1
fi

#
# MAIN
#

# start the main function sourced above
parse_args $@

main
